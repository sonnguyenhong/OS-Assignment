/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HP
 */
public class processTable extends javax.swing.JPanel {

    /**
     * Creates new form processTable
     */
    
    private ArrayList<processInfo> processArray = new ArrayList<processInfo>();
    private int numberOfProcess;
    
    public processTable() {
        initComponents();
        //getProcessList();
        setProcessTable();
        this.setVisible(true);
    }

    public void getProcessList(){
        processArray = new ArrayList<processInfo>();
        numberOfProcess = 0;
        try{
            String line;
            Process p = Runtime.getRuntime().exec("tasklist.exe /fo csv /nh");
            BufferedReader input = new BufferedReader(new InputStreamReader(p.getInputStream()));
            while((line = input.readLine()) != null){
                String[] infor = line.split(",");
                String processName = infor[0];
                String processId = infor[1];
                String sessionName = infor[2];
                String sessionId = infor[3];
                String memoryUsage = infor[4];

                processArray.add(new processInfo(processName, processId, sessionName, sessionId, memoryUsage));
                numberOfProcess++;
                //Thread.sleep(1000);
            }
        }catch(Exception e){
            System.out.println("Error in getProcess in processTable");
        }
            
        
    }
    
    public void setProcessTable(){
            
            getProcessList();
            DefaultTableModel tbModel = (DefaultTableModel) processTable.getModel();
            //Xoa tat ca cac hang
            int rowCount = tbModel.getRowCount();
            for(int i = rowCount - 1; i >= 0 ; i--){
                tbModel.removeRow(i);
            }
            
            for(processInfo pInfo : processArray){
                Object[] data = {pInfo.getProcessName(), pInfo.getProcessId(), pInfo.getSessionName(),
                                    pInfo.getSessionId(), pInfo.getMemoryUsage()};
                tbModel.addRow(data);
            }
            
            tbModel.fireTableDataChanged();
        
    }
    
    public void addProcess(String name){
        try{
            Process newProcess = Runtime.getRuntime().exec(name);
            //System.out.println(newProcess.pid());
            updateProcessTable();
        }catch(Exception e){
            System.out.println("Fail to create new process");
        }
    }
    
    public void deleteProcess(long processId){
        try{
            String cmd = "taskkill /F /PID " + processId;
            Runtime.getRuntime().exec(cmd);
            updateProcessTable();
        }catch(IOException e){
            System.out.println("Error in deleteProcess - cannot delete process!");
        }
    }
    
    public ArrayList<processInfo> getProcessArray(){
        return this.processArray;
    }
    
    public void updateProcessTable(){
        //getProcessList();
        //new processTable();
        setProcessTable();
    }
    
    public int getNumberOfProcess(){
        return this.numberOfProcess;
    }
    
    public int getRowCount(){
        DefaultTableModel tbModel = (DefaultTableModel) processTable.getModel();
        return tbModel.getRowCount();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        processTable = new javax.swing.JTable();

        processTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ProcessName", "ProcessID", "SessionName", "SessionID", "MemoryUsage"
            }
        ));
        jScrollPane1.setViewportView(processTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 702, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable processTable;
    // End of variables declaration//GEN-END:variables
}
